name: Glimpse In-Development AppImage

# On each push to dev branch, the continuous AppImage is updated
on:
  push:
    branches: [ dev-g210 ]

jobs:
  build-linux-appimage-dev:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          path: Glimpse

      - name: Set up Ubuntu 20.04 runner
        run: |
          sudo sed -i '/deb-src/s/^# //' /etc/apt/sources.list
          sudo apt-get --quiet update --yes

      - name: Install build tools
        run: sudo apt-get --quiet install --yes build-essential git python3 python3-pip python3-setuptools python3-wheel ninja-build libgirepository1.0-dev valac libasound2-plugins appstream gnome-themes-extra-data

      - name: Install build dependencies
        run: sudo apt-get --quiet build-dep gimp

      - name: Install meson
        run: yes | sudo pip3 install meson

      - name: Set global environment variables
        run: |
          echo "SRC_PREFIX=${{ github.workspace }}" >> $GITHUB_ENV
          echo "INSTALL_PREFIX=/usr" >> $GITHUB_ENV
          echo "GLIMPSE_VERSION=${GITHUB_RUN_NUMBER}.git-${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Clone BABL 0.1.84 from GNOME gitlab server
        run: git clone --depth=1 --branch BABL_0_1_84 https://gitlab.gnome.org/GNOME/babl.git $SRC_PREFIX/babl

      - name: Clone MyPaint-Brushes 1.3.1 from Github
        run: git clone --depth=1 --branch v1.3.1 https://github.com/mypaint/mypaint-brushes.git $SRC_PREFIX/mypaint-brushes

      - name: Clone LibMyPaint 1.5.1 from Github
        run: git clone --depth=1 --branch v1.5.1 https://github.com/mypaint/libmypaint.git $SRC_PREFIX/libmypaint

      - name: Clone GEGL 0.4.28 from GNOME gitlab server
        run: git clone --depth=1 --branch GEGL_0_4_28 https://gitlab.gnome.org/GNOME/gegl.git $SRC_PREFIX/gegl

      - name: Build BABL
        run: |
          cd $SRC_PREFIX/babl
          meson builddir --prefix=$INSTALL_PREFIX --buildtype=release -Db_lto=true -Dwith-docs=false
          cd $SRC_PREFIX/babl/builddir
          ninja && sudo ninja install

      - name: Build mypaint-brushes
        run: |
          cd $SRC_PREFIX/mypaint-brushes
          ./autogen.sh --prefix=$INSTALL_PREFIX
          ./configure --prefix=$INSTALL_PREFIX
          make -j$(nproc) && sudo make install

      - name: Build libmypaint
        run: |
          cd $SRC_PREFIX/libmypaint
          ./autogen.sh --prefix=$INSTALL_PREFIX
          ./configure --prefix=$INSTALL_PREFIX
          make -j$(nproc) && sudo make install

      - name: Build GEGL
        run: |
          cd $SRC_PREFIX/gegl
          meson builddir --prefix=$INSTALL_PREFIX --buildtype=release -Db_lto=true -Ddocs=false
          cd $SRC_PREFIX/gegl/builddir
          ninja && sudo ninja install

      - name: Build in-development version of Glimpse Image Editor
        run: |
          cd $SRC_PREFIX/Glimpse
          ./autogen.sh --prefix=$INSTALL_PREFIX --disable-gtk-doc --disable-gtk-doc-html --without-webkit --without-xvfb-run --disable-python --disable-check-update
          make -j$(nproc)

      - name: Install components into AppDir
        run: |
          cp -rv $SRC_PREFIX/Glimpse/AppImageBuilder.yml ${{ github.workspace }}

          export DESTDIR="${{ github.workspace }}/AppDir" && cd $SRC_PREFIX/babl/builddir &&  sudo -E ninja install
          export DESTDIR="${{ github.workspace }}/AppDir" && cd $SRC_PREFIX/mypaint-brushes && sudo -E make install
          export DESTDIR="${{ github.workspace }}/AppDir" && cd $SRC_PREFIX/libmypaint && sudo -E make install
          export DESTDIR="${{ github.workspace }}/AppDir" && cd $SRC_PREFIX/gegl/builddir && sudo -E ninja install
          export DESTDIR="${{ github.workspace }}/AppDir" && cd $SRC_PREFIX/Glimpse && sudo -E make install
          sudo chown $USER "${{ github.workspace }}/AppDir" -R

      - name: Create AppImage
        uses: AppImageCrafters/build-appimage-action@master
        env:
          UPDATE_INFO: gh-releases-zsync|glimpse-editor|Glimpse|latest|*x86_64.AppImage.zsync
          GLIMPSE_VERSION: ${{ env.GLIMPSE_VERSION }}
          BUILDER_VERSION: master
        with:
          recipe: 'AppImageBuilder.yml'

      - name: Release latest AppImage
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: Latest AppImage
          automatic_release_tag: continuous
          prerelease: true
          draft: false
          files: |
            Glimpse*.AppImage*
          repo_token: ${{ secrets.GITHUB_TOKEN }}
    